{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/income-supplier/income-supplier.component.ts","webpack:///src/app/income-supplier/income-supplier.component.html","webpack:///src/app/services/tax-calculator.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","Date","getFullYear","selector","templateUrl","styleUrls","AppModule","provide","useValue","declarations","providers","bootstrap","DashboardComponent","formBuilder","taxCalulcatorService","formgroup","group","firstName","compose","required","pattern","middleName","lastName","address","minLength","maxLength","dateOfBirth","email","phone","grossIncome","regime","form","valid","validateAllFormFields","formValue","value","tax","getTax","surcharge","cess","totalTax","formGroup","Object","controls","forEach","field","control","get","markAsTouched","onlySelf","onFormSubmit","IncomeSupplierComponent","TaxCalculatorService","oldTaxRates","newTaxRates","income","slabValue","quotient","Math","floor","remainder","selectedtaxRates","i","length","round","Number","EPSILON","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { IncomeSupplierComponent } from './income-supplier/income-supplier.component';\n\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent },\n  { path: 'income', component: IncomeSupplierComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'whatismytax';\n\n  getCurrentYear(): number {\n    return new Date().getFullYear();\n  }\n}\n","<header>\n\n</header>\n<mat-toolbar color=\"primary\">\n    <span class=\"brand\">What is my Tax</span>\n    <span class=\"space-filler\"></span>\n    <span class=\"login\">Login</span>\n</mat-toolbar>\n<section class=\"content\">\n  <router-outlet></router-outlet>\n</section>\n<footer>\n  <span class=\"footer-text\">&copy; {{getCurrentYear()}} copyrights protected by <a class=\"ref-link\" href=\"http://www.shreesoftsolutions.com\" target=\"blank\">Shree Soft Solutions</a></span>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, LOCALE_ID } from '@angular/core';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule, MAT_DATE_LOCALE, MatRippleModule } from '@angular/material/core';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { IncomeSupplierComponent } from './income-supplier/income-supplier.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    IncomeSupplierComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatButtonModule,\n    MatRadioModule,\n    MatRippleModule\n  ],\n  providers: [\n    { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\n    { provide: LOCALE_ID, useValue: 'en-IN' }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, NgForm, FormControl } from '@angular/forms';\nimport { TaxCalculatorService } from '../services/tax-calculator.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  formgroup: FormGroup;\n  tax: any;\n  surcharge : number;\n  cess: number;\n  totalTax: number;\n\n  constructor(private formBuilder: FormBuilder, private taxCalulcatorService: TaxCalculatorService) {\n  }\n\n  ngOnInit(): void {\n    this.formgroup = this.formBuilder.group({\n      firstName: [null, Validators.compose([Validators.required, Validators.pattern('^[a-zA-Z]+$')])],\n      middleName: [null, Validators.pattern('^[a-zA-Z]+$')],\n      lastName: [null, Validators.compose([Validators.required, Validators.pattern('^[a-zA-Z]+$')])],\n      address: [null, Validators.compose([Validators.required, Validators.minLength(30), Validators.maxLength(100)])],\n      dateOfBirth: [null, Validators.required],\n      email: [null, Validators.compose([Validators.required, Validators.email])],\n      phone: [null, Validators.compose([Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')])],\n      grossIncome: [null, Validators.compose([Validators.required, Validators.pattern('^[0-9]+$')])],\n      regime: ['old', null]\n    });\n  }\n\n  onFormSubmit(form): void {\n    if (!form.valid) {\n      this.validateAllFormFields(form);\n    } else {\n      const formValue = form.value;\n      this.tax = this.taxCalulcatorService.getTax(formValue.grossIncome, formValue.regime);\n      this.surcharge = 0.02 * this.tax.tax;\n      this.cess = 0.02 * this.tax.tax;\n      this.totalTax = this.tax.tax + this.surcharge + this.cess;\n    }\n  }\n\n  validateAllFormFields(formGroup: FormGroup) {         //{1}\n    Object.keys(formGroup.controls).forEach(field => {  //{2}\n      const control = formGroup.get(field);             //{3}\n      if (control instanceof FormControl) {             //{4}\n        control.markAsTouched({ onlySelf: true });\n      } else if (control instanceof FormGroup) {        //{5}\n        this.validateAllFormFields(control);            //{6}\n      }\n    });\n  }\n}\n","<div class=\"user-input\">\n    <form [formGroup]=\"formgroup\" (ngSubmit)=\"onFormSubmit(formgroup)\">\n        <fieldset>\n            <div class=\"firstNameField\">\n                <mat-form-field>\n                    <mat-label>First Name:</mat-label>\n                    <input type=\"text\" matInput formControlName=\"firstName\" placeholder=\"First Name\">\n                </mat-form-field>\n                <mat-error *ngIf=\"!formgroup.get('firstName').valid && formgroup.get('firstName').touched\">\n                    <span *ngIf=\"formgroup.get('firstName').hasError('required')\">First Name is required!!</span>\n                </mat-error>\n            </div>\n            <div class=\"middleNameField\">\n                <mat-form-field>\n                    <mat-label>Middle Name:</mat-label>\n                    <input type=\"text\" matInput formControlName=\"middleName\" placeholder=\"First Name\">\n                </mat-form-field>\n                <mat-error *ngIf=\"!formgroup.get('middleName').valid && formgroup.get('middleName').touched\">\n                    <span *ngIf=\"formgroup.get('middleName').hasError('pattern')\">Middle Name can have only\n                        alphabet</span>\n                </mat-error>\n            </div>\n            <div class=\"lastNameField\">\n                <mat-form-field>\n                    <mat-label>Last Name:</mat-label>\n                    <input type=\"text\" matInput formControlName=\"lastName\" placeholder=\"Last Name\">\n                </mat-form-field>\n                <mat-error *ngIf=\"!formgroup.get('lastName').valid && formgroup.get('lastName').touched\">\n                    <span *ngIf=\"formgroup.get('lastName').errors.required\">Last Name is required!!</span>\n                </mat-error>\n            </div>\n            <div class=\"addressField\">\n                <mat-form-field>\n                    <mat-label>Address:</mat-label>\n                    <textarea matInput formControlName=\"address\" placeholder=\"Address\"></textarea>\n                </mat-form-field>\n                <mat-error *ngIf=\"!formgroup.get('address').valid && formgroup.get('address').touched\">\n                    <span *ngIf=\"formgroup.get('address').hasError('required')\">Address is required!!</span>\n                    <span *ngIf=\"formgroup.get('address').hasError('minlength')\">Address should having minimum of 30\n                        characters.</span>\n                    <span *ngIf=\"formgroup.get('address').hasError('maxlength')\">Address can have a maximum of 100\n                        characters.</span>\n                </mat-error>\n            </div>\n            <div class=\"dateOfBirthField\">\n                <mat-form-field>\n                    <mat-label>Date of Birth:</mat-label>\n                    <input type=\"text\" matInput formControlName=\"dateOfBirth\" placeholder=\"dd/mm/yyyy\"\n                        [matDatepicker]=\"picker\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker></mat-datepicker>\n                </mat-form-field>\n                <mat-error *ngIf=\"!formgroup.get('dateOfBirth').valid && formgroup.get('dateOfBirth').touched\">\n                    <span *ngIf=\"formgroup.get('dateOfBirth').hasError('required')\">Date Of Birth is required!!</span>\n                </mat-error>\n            </div>\n            <div class=\"emailField\">\n                <mat-form-field>\n                    <mat-label>Email:</mat-label>\n                    <input type=\"email\" matInput formControlName=\"email\" placeholder=\"abc@company.com\">\n                </mat-form-field>\n                <mat-error *ngIf=\"!formgroup.get('email').valid && formgroup.get('email').touched\">\n                    <span *ngIf=\"formgroup.get('email').hasError('required')\">Email is required!!</span>\n                    <span *ngIf=\"formgroup.get('email').hasError('email')\">Please enter a proper email address.</span>\n                </mat-error>\n            </div>\n            <div class=\"phoneField\">\n                <mat-form-field>\n                    <mat-label>Phone:</mat-label>\n                    <input type=\"tel\" matInput formControlName=\"phone\" placeholder=\"987654321\">\n                    <span matPrefix>+91-&nbsp;</span>\n                </mat-form-field>\n                <mat-error *ngIf=\"!formgroup.get('phone').valid && formgroup.get('phone').touched\">\n                    <span *ngIf=\"formgroup.get('phone').hasError('phone')\">Phone Number is required!!</span>\n                    <span *ngIf=\"formgroup.get('phone').hasError('pattern')\">Please enter a valid Indian telephone\n                        number.</span>\n                </mat-error>\n            </div>\n            <div class=\"grossIncomeField\">\n                <mat-form-field>\n                    <mat-label>Gross Annual Income:</mat-label>\n                    <input type=\"number\" matInput formControlName=\"grossIncome\">\n                    <span matPrefix>&#8377;&nbsp;</span>\n                    <span matSuffix>.00</span>\n                </mat-form-field>\n                <mat-error *ngIf=\"!formgroup.get('grossIncome').valid && formgroup.get('grossIncome').touched\">\n                    <span *ngIf=\"formgroup.get('grossIncome').hasError('required')\">Gross Annual Income is\n                        required!!</span>\n                </mat-error>\n            </div>\n            <div class=\"regimeSelected\">\n                <mat-label>Income Tax Regime:</mat-label>\n                <mat-radio-group ngDefaultControl formControlName=\"regime\">\n                    <mat-radio-button matInput value=\"old\">Old Regime (2012-2019)</mat-radio-button>\n                    <mat-radio-button matInput value=\"new\">New Regime (2020+)</mat-radio-button>\n                </mat-radio-group>\n            </div>\n        </fieldset>\n        <button mat-raised-button color=\"primary\">Submit</button>\n    </form>\n    <div *ngIf=\"tax\">\n        <table>\n            <thead>\n                <th>Particular</th>\n                <th>Amount</th>\n            </thead>\n            <tr>\n                <td>Income Tax</td>\n                <td align=\"right\">{{tax.tax | currency:'INR'}}</td>\n            </tr>\n            <tr>\n                <td>Surchage</td>\n                <td align=\"right\">{{surcharge | currency:'INR'}}</td>\n            </tr>\n            <tr>\n                <td>Cess</td>\n                <td align=\"right\"> {{cess | currency:'INR'}}</td>\n            </tr>\n            <tr>\n                <td>Total tax</td>\n                <td align=\"right\"> {{totalTax | currency:'INR'}}</td>\n            </tr>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-income-supplier',\n  templateUrl: './income-supplier.component.html',\n  styleUrls: ['./income-supplier.component.scss']\n})\nexport class IncomeSupplierComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>income-supplier works!</p>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaxCalculatorService {\n  private oldTaxRates = [\n    0.00, //        0 -  2,50,000\n    0.05, // 2,50,001 -  5,00,000\n    0.10, // 5,00,001 -  7,50,000\n    0.10, // 7,50,001 - 10,00,000\n    0.20, //10,00,001 - 12,50,000 \n    0.20, //12,50,001 - 15,00,000\n    0.30  //15,00,001 - ...\n  ];\n  // section 115BAC\n  private newTaxRates = [\n    0.00, //        0 -  2,50,000\n    0.00, // 2,50,001 -  5,00,000\n    0.10, // 5,00,001 -  7,50,000\n    0.15, // 7,50,001 - 10,00,000\n    0.20, //10,00,001 - 12,50,000 \n    0.25, //12,50,001 - 15,00,000\n    0.30  //15,00,001 - ...\n  ];\n\n  constructor() { }\n\n  getTax(income: number, regime: 'old' | 'new'): any {\n    let tax = 0;\n    const slabValue = 250000;\n    const quotient = Math.floor(income / slabValue);\n    const remainder = (income - (slabValue * quotient)) % slabValue;\n    const selectedtaxRates = (regime === 'old') ? this.oldTaxRates : this.newTaxRates;\n    for (let i = 0; i < (quotient <= selectedtaxRates.length ? quotient : selectedtaxRates.length); i++) {\n      tax += slabValue * selectedtaxRates[i];\n    }\n    if (quotient > 0 && remainder > 0) {\n      if(quotient < selectedtaxRates.length ){\n        tax += remainder * selectedtaxRates[quotient];\n      } else {\n        tax += (remainder + (slabValue * Math.floor(quotient-6))) * selectedtaxRates[selectedtaxRates.length-1];\n      }\n    }\n    tax = Math.round((tax + Number.EPSILON) * 100)/100;\n    return { quotient, remainder, tax };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}